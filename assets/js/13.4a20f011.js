(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{241:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第07章-单例模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第07章-单例模式"}},[s._v("#")]),s._v(" 第07章 单例模式")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548685120302",href:"/assets/1548685120302.png"}},[a("img",{attrs:{src:"/assets/1548685120302.png",alt:"1548685120302"}})])]),s._v(" "),a("h2",{attrs:{id:"_7-1-定义、类型、适用场景及优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-定义、类型、适用场景及优缺点"}},[s._v("#")]),s._v(" 7.1 定义、类型、适用场景及优缺点")]),s._v(" "),a("p",[a("strong",[s._v("定义")]),s._v("：保证一个类仅有一个实例，并提供一个全局访问点")]),s._v(" "),a("p",[a("strong",[s._v("类型")]),s._v("：创建型")]),s._v(" "),a("p",[a("strong",[s._v("适用场景")]),s._v("：想确保任何情况下都绝对只有一个实例；")]),s._v(" "),a("p",[a("strong",[s._v("优点")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("在内存里只有一个实例，减少内存开销；")]),s._v(" "),a("li",[s._v("可以避免对资源的多重占用；")]),s._v(" "),a("li",[s._v("设置全局访问点，严格控制访问；")])]),s._v(" "),a("p",[a("strong",[s._v("缺点")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("没有接口，扩展困难")])]),s._v(" "),a("p",[a("strong",[s._v("重点")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("私有构造器；")]),s._v(" "),a("li",[s._v("线程安全；")]),s._v(" "),a("li",[s._v("延迟加载；")]),s._v(" "),a("li",[s._v("序列化和反序列化安全；")]),s._v(" "),a("li",[s._v("反射；")])]),s._v(" "),a("p",[a("strong",[s._v("Double Check（双重检测）")]),s._v("：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548685542257",href:"/assets/1548685542257.png"}},[a("img",{attrs:{src:"/assets/1548685542257.png",alt:"1548685542257"}})])]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548685549022",href:"/assets/1548685549022.png"}},[a("img",{attrs:{src:"/assets/1548685549022.png",alt:"1548685549022"}})])]),s._v(" "),a("p",[a("strong",[s._v("静态内部类")]),s._v("：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548685556269",href:"/assets/1548685556269.png"}},[a("img",{attrs:{src:"/assets/1548685556269.png",alt:"1548685556269"}})])]),s._v(" "),a("p",[a("strong",[s._v("注意")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("反编译")]),s._v(" "),a("li",[s._v("内存原理；")]),s._v(" "),a("li",[s._v("多线程Debug;")])]),s._v(" "),a("h2",{attrs:{id:"_7-2-懒汉式及多线程debug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-懒汉式及多线程debug"}},[s._v("#")]),s._v(" 7.2 懒汉式及多线程Debug")]),s._v(" "),a("h3",{attrs:{id:"_7-2-1-懒汉式单例模式及其问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-1-懒汉式单例模式及其问题"}},[s._v("#")]),s._v(" 7.2.1 懒汉式单例模式及其问题")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" lazySingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 构造器私有，防止外部创建")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lazySingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            lazySingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" lazySingleton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("可以看到，理想状态下，当线程第一次进入方法的时候，lazySingleton为null，则会创建新对象，而下次线程进入方法的时候，发现lazySingleton已经不为null，则会直接返回lazySingleton，从而控制只返回一个相同的对象；")]),s._v(" "),a("p",[s._v("但是，在多线程情况下事实并非如此，此时线程A进入到第7行代码，并未参数新对象，线程B刚好处于第6行代码，线程B会发现lazySingleton为null，则会进入并创建新对象，这样该方法就产生了两个不同的实例对象。")]),s._v(" "),a("p",[s._v("验证（多线程Debug）：")]),s._v(" "),a("p",[s._v("创建线程任务：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"  "')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("创建Test：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"program end"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("打断点，并右击断点设置为多线程方式debug:")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548687400016",href:"/assets/1548687400016.png"}},[a("img",{attrs:{src:"/assets/1548687400016.png",alt:"1548687400016"}})])]),s._v(" "),a("p",[s._v("在主线程中开始Debug:")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548687504075",href:"/assets/1548687504075.png"}},[a("img",{attrs:{src:"/assets/1548687504075.png",alt:"1548687504075"}})])]),s._v(" "),a("p",[s._v("这样，主线程就阻塞在断点处，等待t1和t2线程的执行")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548687568068",href:"/assets/1548687568068.png"}},[a("img",{attrs:{src:"/assets/1548687568068.png",alt:"1548687568068"}})])]),s._v(" "),a("p",[s._v("在IDEA的左下角，可以切换线程：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548687647952",href:"/assets/1548687647952.png"}},[a("img",{attrs:{src:"/assets/1548687647952.png",alt:"1548687647952"}})])]),s._v(" "),a("p",[s._v("切换到Thread-0:")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548687685674",href:"/assets/1548687685674.png"}},[a("img",{attrs:{src:"/assets/1548687685674.png",alt:"1548687685674"}})])]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548687705250",href:"/assets/1548687705250.png"}},[a("img",{attrs:{src:"/assets/1548687705250.png",alt:"1548687705250"}})])]),s._v(" "),a("p",[s._v("可见线程Thread-0在run方法中，Thread-0执行到下图处，再切换Thread-1并也运行到此处：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548687891794",href:"/assets/1548687891794.png"}},[a("img",{attrs:{src:"/assets/1548687891794.png",alt:"1548687891794"}})])]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548687908412",href:"/assets/1548687908412.png"}},[a("img",{attrs:{src:"/assets/1548687908412.png",alt:"1548687908412"}})])]),s._v(" "),a("p",[s._v("此时，两个线程的lazySingleton都为null，两个线程均会创建新实例")]),s._v(" "),a("p",[s._v("两个线程在打印之前均执行创建实例代码，并相继结束，结果如下： "),a("a",{attrs:{"data-fancybox":"",title:"1548688070652",href:"/assets/1548688070652.png"}},[a("img",{attrs:{src:"/assets/1548688070652.png",alt:"1548688070652"}})])]),s._v(" "),a("p",[s._v("此时，打印结果为两个相同的实例，可想而知，该实例为后执行的线程创建的实例。")]),s._v(" "),a("p",[s._v("如果两个线程不同时执行完，在一个线程打印完成后，另一个线程才继续执行，结果如下：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548688205123",href:"/assets/1548688205123.png"}},[a("img",{attrs:{src:"/assets/1548688205123.png",alt:"1548688205123"}})])]),s._v(" "),a("p",[s._v("此时，为两个不同的对象。")]),s._v(" "),a("p",[s._v("不管怎样，此过程均产生了不止一个实例对象，并不是严格的单例模式；")]),s._v(" "),a("h3",{attrs:{id:"_7-2-2-使用同步锁解决懒汉式单例问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-2-使用同步锁解决懒汉式单例问题"}},[s._v("#")]),s._v(" 7.2.2 使用同步锁解决懒汉式单例问题")]),s._v(" "),a("p",[s._v("第一种，锁类：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" lazySingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lazySingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                lazySingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" lazySingleton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("同样，Thread-0进入到创建实例语句处：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548688427482",href:"/assets/1548688427482.png"}},[a("img",{attrs:{src:"/assets/1548688427482.png",alt:"1548688427482"}})])]),s._v(" "),a("p",[s._v("切换到Thread-1,并试图运行到创建新实例处：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548688728963",href:"/assets/1548688728963.png"}},[a("img",{attrs:{src:"/assets/1548688728963.png",alt:"1548688728963"}})])]),s._v(" "),a("p",[s._v("发现Thread-1已被阻塞，进不去，这就是锁的作用；")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548688796653",href:"/assets/1548688796653.png"}},[a("img",{attrs:{src:"/assets/1548688796653.png",alt:"1548688796653"}})])]),s._v(" "),a("p",[s._v("此时结果满足单例模式")]),s._v(" "),a("p",[s._v("第二种，锁方法：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" lazySingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lazySingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            lazySingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazySingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" lazySingleton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("但是，同步锁方式比较消耗资源，有加锁和解锁的开销，锁类的时候，锁的范围较大，对性能有一定的影响，不建议使用这种模式，可以进一步使用其他方法；")]),s._v(" "),a("h3",{attrs:{id:"_7-2-3-double-check双重检查懒汉式单例模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-3-double-check双重检查懒汉式单例模式"}},[s._v("#")]),s._v(" 7.2.3 Double Check双重检查懒汉式单例模式")]),s._v(" "),a("p",[s._v("前置知识")]),s._v(" "),a("p",[a("strong",[s._v("Java内存模型")])]),s._v(" "),a("p",[s._v("Java内存模型的主要目标：定义在虚拟机中将变量存储到内存和从内存中取出变量这样的底层细节。")]),s._v(" "),a("p",[s._v("注意：上边的变量指的是共享变量（实例字段、静态字段、数组对象元素），不包括线程私有变量（局部变量、方法参数），因为私有变量不会存在竞争关系。")]),s._v(" "),a("p",[s._v("内存模型其实就是一张图：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1551104676916",href:"/assets/1551104676916.png"}},[a("img",{attrs:{src:"/assets/1551104676916.png",alt:"1551104676916"}})])]),s._v(" "),a("p",[a("strong",[s._v("说明：")])]),s._v(" "),a("ul",[a("li",[s._v("所有共享变量存于主内存")]),s._v(" "),a("li",[s._v("每一条线程都有自己的工作内存（就是上图所说的本地内存）")]),s._v(" "),a("li",[s._v("工作内存中保存了被该线程使用到的变量的主内存副本")])]),s._v(" "),a("p",[a("strong",[s._v("注意：")])]),s._v(" "),a("ul",[a("li",[s._v("线程对变量的操作都要在工作内存中进行，不能直接操作主内存")]),s._v(" "),a("li",[s._v("不同的线程之间无法直接访问对方的工作内存中的变量")]),s._v(" "),a("li",[s._v("不同线程之间的变量的传递必须通过主内存")])]),s._v(" "),a("p",[s._v("类比：（注意：主内存与工作内存只是一个概念，与堆栈内存没有关系，下边的类比只是帮助理解）")]),s._v(" "),a("ul",[a("li",[s._v("主内存：对应于Java堆中的对象实例数据部分（注意：堆中还保存了对象的其他信息，eg.Mark Word、Klass Point和用于字节对其补白的填充数据）")]),s._v(" "),a("li",[s._v("工作内存：对应于栈中的部分区域")])]),s._v(" "),a("p",[a("strong",[s._v("8条内存屏障指令：")])]),s._v(" "),a("p",[s._v("下面只列出6条与之后内容相关的，其余的查看《深入理解Java虚拟机》")]),s._v(" "),a("ul",[a("li",[s._v("lock：作用于主内存，把一个变量标识为一条线程独占的状态")]),s._v(" "),a("li",[s._v("unlock：作用于主内存，把一个处于锁定的变量解锁")])]),s._v(" "),a("p",[s._v("下边四条是与"),a("strong",[s._v("volatile")]),s._v("实现内存可见性直接相关的四条（store、write、read、load）")]),s._v(" "),a("ul",[a("li",[s._v("store：把工作内存中的变量的值传送到主内存中")]),s._v(" "),a("li",[s._v("write：把store操作从工作内存中得到的变量值放入到主内存的变量中")]),s._v(" "),a("li",[s._v("read：把一个变量的值从主内存中传输到线程的工作内存")]),s._v(" "),a("li",[s._v("load：把read操作从主内存中获取到的变量值放入工作内存的变量中去")])]),s._v(" "),a("p",[a("strong",[s._v("注意：")])]),s._v(" "),a("ul",[a("li",[s._v("一个变量在同一时刻只允许一条线程对其进行lock操作")]),s._v(" "),a("li",[s._v("lock操作会将该变量在所有线程工作内存中的变量副本清空，否则就起不到锁的作用了")]),s._v(" "),a("li",[s._v("lock操作可被同一条线程多次进行，lock几次，就要unlock几次（可重入锁）")]),s._v(" "),a("li",[s._v("unlock之前必须先执行store-write")]),s._v(" "),a("li",[s._v("store-write必须成对出现（工作内存--\x3e主内存）")]),s._v(" "),a("li",[s._v("read-load必须成对出现（主内存--\x3e工作内存）")])]),s._v(" "),a("p",[a("strong",[s._v("变量对所有线程的可见性")])]),s._v(" "),a("p",[s._v("可见性：线程1对共享变量的修改能及时被线程2看到")]),s._v(" "),a("p",[a("strong",[s._v("共享变量不可见的原因")])]),s._v(" "),a("ul",[a("li",[s._v("共享变量更新后的值没有在工作内存和主内存之间及时更新")]),s._v(" "),a("li",[s._v("线程交错执行")]),s._v(" "),a("li",[s._v("指令重排序结合线程交错执行")])]),s._v(" "),a("p",[a("strong",[s._v("实现共享变量及时更新的措施")])]),s._v(" "),a("p",[s._v("线程1修改过共享变量后，将共享变量刷到主内存，然后，线程2从主内存读取该共享变量，将该共享变量载入到工作内存中")]),s._v(" "),a("p",[s._v("注意：在短时间内的高并发情况下，如果发生下列三种情况，则线程2就读不到线程1修改过的最新值了，")]),s._v(" "),a("p",[s._v("（1）可能线程1根本来不及将修改过后的共享变量刷到主内存（这个时间非常短，但是还是有）的时候，线程2就已经读取了原有的主内存变量到其工作内存中。")]),s._v(" "),a("p",[s._v("（2）可能线程1虽然将修改过后的值刷到了主内存中，但是线程2的工作内存中的变量副本还没来得及从CPU刷新回来，所以线程2读取到的还是原来的工作内存中的变量副本")]),s._v(" "),a("p",[s._v("（3）可能线程1根本来不及将修改过后的共享变量刷到主内存的时候，同时，线程2的工作内存中的变量副本还没来得及从CPU刷新回来")]),s._v(" "),a("p",[a("strong",[s._v("注意：工作内存中的变量副本在使用之后，不会立刻消失掉，会一直存在，这样其值也一直不变，直到对其进行写操作或数据从CPU")]),s._v("中刷新回来（类比volatile-read的作用）。")]),s._v(" "),a("p",[a("strong",[s._v("指令重排序")])]),s._v(" "),a("p",[s._v("代码书写顺序与实际执行顺序不同（编译器或处理器为提高程序性能做的优化）")]),s._v(" "),a("p",[s._v("eg.书写代码的顺序如下：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("可能执行的顺序如下：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("volatile的具体实现原理")])]),s._v(" "),a("ul",[a("li",[s._v("对volatile变量执行写操作时，会在写操作后加入一条store屏障指令")]),s._v(" "),a("li",[s._v("对volatile变量执行读操作时，会在读操作前加入一条load屏障指令")])]),s._v(" "),a("p",[s._v("说人话：")]),s._v(" "),a("ul",[a("li",[s._v("对volatile变量执行读操作时，都要强制的先从主内存读取最新的变量值到工作内存，然后再读工作内存中所存储的变量副本")]),s._v(" "),a("li",[s._v("对volatile变量执行写操作时，又会强制的将工作内存中的刚刚改变的值写到主内存中去")])]),s._v(" "),a("p",[s._v("通过上边这样模式，每个线程拿到的volatile变量值都是最新的。")]),s._v(" "),a("p",[s._v("注意：volatile无法实现原子性：")]),s._v(" "),a("p",[s._v("eg. private volatile int count = 0;")]),s._v(" "),a("p",[s._v("假设现在有两条线程分别对count执行加1操作，那么期待的结果最后count==2，但是看下边的分析：")]),s._v(" "),a("p",[s._v("假设有如下流程：")]),s._v(" "),a("p",[s._v("1）线程a获取了count==0；")]),s._v(" "),a("p",[s._v("2）线程b获取了count==0；")]),s._v(" "),a("p",[s._v("3）线程b对count+1，之后写入主内存count==1；")]),s._v(" "),a("p",[s._v("4）线程a对count+1，之后写入主内存count==1；")]),s._v(" "),a("p",[s._v("结果count==1而非count==2，原因就是线程a获取count后，volatile不能实现原子性，这个时候b也能去操作count。")]),s._v(" "),a("p",[s._v("想要实现原子性，使用synchronized去锁住增加方法，或者使用ReentrantLock去锁住增加代码；当然，以上场景使用AtomicInteger更好。")]),s._v(" "),a("p",[a("strong",[s._v("volitile使用场景")])]),s._v(" "),a("p",[s._v("（1）运算结果并不依赖当前值，例如Boolean就可，而number++这样的就不行，这样的情况使用锁")]),s._v(" "),a("p",[s._v("（2）运算结果依赖当前值但是能够确保只有单一线程修改变量的值，例如ConcurrentHashMap中Segment的count变量")]),s._v(" "),a("p",[s._v("count变量只能由单一线程来改变（因为put和remove都是加锁的），但是修改后未必能及时刷新到主内存；这时候读线程去读取的话就可能读到旧数据。所以需要volatile来保证可见性。")]),s._v(" "),a("p",[s._v("（3）变量不需要与其他的状态变量共同参与不变约束，例如low<up这样的场景就不行")]),s._v(" "),a("p",[s._v("（4）在访问变量时需要使用锁，就不要使用volatile（《java并发编程实战》）")]),s._v(" "),a("p",[s._v("所以说，volatile只能实现部分线程安全（实际上只能实现可见性）。 如果volatile用得好的话，比synchronized强不少，因为不需要上下文切换。")]),s._v(" "),a("p",[s._v('注：关于volatile禁止指令重排序的介绍去看《深入理解Java虚拟机（第二版）》第十二章"Java内存模型与线程" 通常情况下，能用volatile解决的就不去用synchronized了')]),s._v(" "),a("p",[s._v("通过前面的了解，可以开始讲解双重检查懒汉式单例模式：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),s._v(" lazyDoubleCheckSingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lazyDoubleCheckSingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lazyDoubleCheckSingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    lazyDoubleCheckSingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" lazyDoubleCheckSingleton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("上面的代码即是双重检查懒汉式单例模式，但是，在多线程的情况下会出现代码重排的情况，实际上，在创建对象的时候（new LazyDoubleCheckSingleton()）经历了三个步骤：")]),s._v(" "),a("p",[s._v("（1）分配内存给这个对象；")]),s._v(" "),a("p",[s._v("（2）初始化对象；")]),s._v(" "),a("p",[s._v("（3）设置lazyDoubleCheckSingleton 指向刚分配的内存地址；")]),s._v(" "),a("p",[s._v("代码重排后可能的执行顺序为：")]),s._v(" "),a("p",[s._v("（1）分配内存给这个对象；")]),s._v(" "),a("p",[s._v("（3）设置lazyDoubleCheckSingleton 指向刚分配的内存地址；")]),s._v(" "),a("p",[s._v("（2）初始化对象；")]),s._v(" "),a("p",[s._v("这样，就会导致，新的线程进入看到的lazyDoubleCheckSingleton不为null，就会直接返回lazyDoubleCheckSingleton对象，而实际上对象还未初始化，这样，程序就会报错。")]),s._v(" "),a("p",[s._v("图解如下：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548685542257",href:"/assets/1548685542257.png"}},[a("img",{attrs:{src:"/assets/1548685542257.png",alt:"1548685542257"}})])]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"1548685549022",href:"/assets/1548685549022.png"}},[a("img",{attrs:{src:"/assets/1548685549022.png",alt:"1548685549022"}})])]),s._v(" "),a("p",[s._v("此时，就可以使用volitile修饰变量，实现内存可见性，最终代码如下：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// volatile共享内存，防止重排序，缓存一致性协议")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),s._v(" lazyDoubleCheckSingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lazyDoubleCheckSingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lazyDoubleCheckSingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    lazyDoubleCheckSingleton "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LazyDoubleCheckSingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" lazyDoubleCheckSingleton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"_7-2-4-静态内部类-基于类初始化延迟加载懒汉式单例模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-4-静态内部类-基于类初始化延迟加载懒汉式单例模式"}},[s._v("#")]),s._v(" 7.2.4 静态内部类--基于类初始化延迟加载懒汉式单例模式")]),s._v(" "),a("p",[s._v("7.3 饿汉式单例模式")])])}),[],!1,null,null,null);t.default=e.exports}}]);