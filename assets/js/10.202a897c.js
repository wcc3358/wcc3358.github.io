(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{221:function(_,v,t){"use strict";t.r(v);var s=t(0),a=Object(s.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"_00-初识数据结构与算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_00-初识数据结构与算法"}},[_._v("#")]),_._v(" 00 初识数据结构与算法")]),_._v(" "),t("h2",{attrs:{id:"什么是数据结构？什么是算法？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是数据结构？什么是算法？"}},[_._v("#")]),_._v(" 什么是数据结构？什么是算法？")]),_._v(" "),t("p",[_._v("大部分数据结构和算法教材，在开篇都会给这两个概念下一个明确的定义。但是，这些定义都很抽象，对理解这两个概念并没有实质性的帮助，反倒会让你陷入死抠定义的误区。毕竟，我们现在学习，并不是为了考试，所以，概念背得再牢，不会用也就没什么用。")]),_._v(" "),t("p",[t("strong",[_._v("虽然我们说没必要深挖严格的定义，但是这并不等于不需要理解概念。")]),_._v(" 下面我就从广义和狭义两个层面，来帮你理解数据结构与算法这两个概念。")]),_._v(" "),t("p",[_._v("从广义上讲，"),t("strong",[_._v("数据结构就是指一组数据的存储结构。算法就是操作数据的一组方法")]),_._v("。")]),_._v(" "),t("p",[_._v("图书馆储藏书籍你肯定见过吧？为了方便查找，图书管理员一般会将书籍分门别类进行“存储”。按照一定规律编号，就是书籍这种“数据”的存储结构。")]),_._v(" "),t("p",[_._v("那我们如何来查找一本书呢？有很多种办法，你当然可以一本一本地找，也可以先根据书籍类别的编号，是人文，还是科学、计算机，来定位书架，然后再依次查找。笼统地说，这些查找方法都是算法。")]),_._v(" "),t("p",[_._v("从狭义上讲，是指某些著名的数据结构和算法，比如队列、栈、堆、二分查找、动态规划等。这些都是前人智慧的结晶，我们可以直接拿来用。我们要讲的这些经典数据结构和算法，都是前人从很多实际操作场景中抽象出来的，经过非常多的求证和检验，可以高效地帮助我们解决很多实际的开发问题。")]),_._v(" "),t("p",[_._v("那数据结构和算法有什么关系呢？为什么大部分书都把这两个东西放到一块儿来讲呢？")]),_._v(" "),t("p",[_._v("这是因为，数据结构和算法是相辅相成的。"),t("strong",[_._v("数据结构是为算法服务的，算法要作用在特定的数据结构之上。")]),_._v(" 因此，我们无法孤立数据结构来讲算法，也无法孤立算法来讲数据结构。")]),_._v(" "),t("p",[_._v("比如，因为数组具有随机访问的特点，常用的二分查找算法需要用数组来存储数据。但如果我们选择链表这种数据结构，二分查找算法就无法工作了，因为链表并不支持随机访问。")]),_._v(" "),t("p",[_._v("数据结构是静态的，它只是组织数据的一种方式。如果不在它的基础上操作、构建算法，孤立存在的数据结构就是没用的。")]),_._v(" "),t("p",[_._v("现在你对数据结构与算法是不是有了比较清晰的理解了呢？有了这些储备，下面我们来看看，究竟该怎么学数据结构与算法。")]),_._v(" "),t("h2",{attrs:{id:"如何学习数据结构与算法？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何学习数据结构与算法？"}},[_._v("#")]),_._v(" 如何学习数据结构与算法？")]),_._v(" "),t("p",[_._v("想要学习数据结构与算法，"),t("strong",[_._v("首先要掌握一个数据结构与算法中最重要的概念——复杂度分析。")])]),_._v(" "),t("p",[_._v("这个概念究竟有多重要呢？可以这么说，它几乎占了数据结构和算法这门课的半壁江山，是数据结构和算法学习的精髓。")]),_._v(" "),t("p",[_._v("数据结构和算法解决的是如何更省、更快地存储和处理数据的问题，因此，我们就需要一个考量效率和资源消耗的方法，这就是复杂度分析方法。所以，如果你只掌握了数据结构和算法的特点、用法，但是没有学会复杂度分析，那就相当于只知道操作口诀，而没掌握心法。只有把心法了然于胸，才能做到无招胜有招！")]),_._v(" "),t("p",[_._v("数据结构和算法书籍中都会讲到的知识点：")]),_._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"1572170472122",href:"/assets/1572170472122.png"}},[t("img",{attrs:{src:"/assets/1572170472122.png",alt:"1572170472122"}})])]),_._v(" "),t("p",[t("strong",[_._v("20 个最常用的、最基础")]),_._v("数据结构与算法（"),t("strong",[_._v("不管是应付面试还是工作需要，都要集中精力逐一攻克")]),_._v("）：")]),_._v(" "),t("p",[_._v("10 个数据结构：数组、链表、栈、队列、散列表、二叉树、堆、跳表、图、Trie 树；")]),_._v(" "),t("p",[_._v("10 个算法：递归、排序、二分查找、搜索、哈希算法、贪心算法、分治算法、回溯算法、动态规划、字符串匹配算法；")]),_._v(" "),t("p",[_._v("掌握了这些基础的数据结构和算法，再学更加复杂的数据结构和算法，就会非常容易、非常快。")]),_._v(" "),t("p",[_._v("在学习数据结构和算法的过程中，也要注意，不要只是死记硬背，不要为了学习而学习，而是"),t("strong",[_._v("要学习它的“来历”“自身的特点”“适合解决的问题”以及“实际的应用场景”")]),_._v("。")]),_._v(" "),t("p",[_._v("学习数据结构和算法的过程，是非常好的思维训练的过程，所以，千万不要被动地记忆，要多辩证地思考，多问为什么。如果一直这么坚持做，最终会发现，等学完之后，写代码的时候就会不由自主地考虑到很多性能方面的事情，时间复杂度、空间复杂度非常高的垃圾代码出现的次数就会越来越少。编程内功就真正得到了修炼。")]),_._v(" "),t("h2",{attrs:{id:"学习技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习技巧"}},[_._v("#")]),_._v(" 学习技巧")]),_._v(" "),t("ul",[t("li",[_._v("边学边练，适度刷题；")]),_._v(" "),t("li",[_._v("多问、多思考、多互动；")]),_._v(" "),t("li",[_._v("不断沉淀；")])])])}),[],!1,null,null,null);v.default=a.exports}}]);