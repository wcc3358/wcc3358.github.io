(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{216:function(a,t,_){"use strict";_.r(t);var s=_(1),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,_=a._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h1",{attrs:{id:"方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方案"}},[a._v("#")]),a._v(" 方案")]),a._v(" "),_("h2",{attrs:{id:"概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),_("h3",{attrs:{id:"背景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[a._v("#")]),a._v(" 背景")]),a._v(" "),_("p",[a._v("随着智云平台不断发展，大规模并发用户、海量数据成为了平台必须面对的技术挑战，平台各系统对基础数据的大量访问开始成为数据库性能瓶颈。提供一个具备高性能的访问基础数据的系统成为必要，构建基础数据系统需要借助构建统一缓存技术改进应用系统架构，提升系统并发访问响应速度和海量数据处理能力。")]),a._v(" "),_("h3",{attrs:{id:"定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[a._v("#")]),a._v(" 定义")]),a._v(" "),_("p",[a._v("基础数据池系统提供车联网人-车-设备-卡数据的统一查询访问，并使用高可用方案保证性能。")]),a._v(" "),_("h3",{attrs:{id:"必要性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#必要性"}},[a._v("#")]),a._v(" 必要性")]),a._v(" "),_("p",[a._v("数据库压力大、redis缓存资源浪费、重复编码、数据缺失一致性")]),a._v(" "),_("blockquote",[_("p",[a._v("（1）目前几乎每个系统都需要使用人-车-设备-卡数据，每个系统均会直接访问数据主库的数据，导致目前数据主库的压力太高，如：正式环境tu-api访问设备表的sql语句每小时高达800万条；")]),a._v(" "),_("p",[a._v("（2）访问人-车-设备-卡数据的系统为了提高效率和性能通常会在系统中做缓存，但每个系统均使用自己的方式在往redis中做缓存，同一份记录存成了不同的redis数据，造成了redis资源的浪费；")]),a._v(" "),_("p",[a._v("（3）访问人-车-设备-卡数据的系统几乎都包含了几个表的service mapper *mapper.xml文件，获取某个信息数据方式一致，有重复编码；")]),a._v(" "),_("p",[a._v("（4）用户每个系统自己做了缓存，而更新数据不在每个系统中，无法做到缓存的更新，导致严重的数据一致性问题，例如：前面开放平台的用户中心，当APP用户修改了昵称时，而用户中心显示的数据还是之前的昵称，原因在于shared的缓存未及时更新；")])]),a._v(" "),_("h3",{attrs:{id:"涉及表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#涉及表"}},[a._v("#")]),a._v(" 涉及表")]),a._v(" "),_("ul",[_("li",[a._v("用户表：core_user")]),a._v(" "),_("li",[a._v("车辆表：global_user_car")]),a._v(" "),_("li",[a._v("设备表：core_terminal_device、core_terminal_device_ext")]),a._v(" "),_("li",[a._v("sim卡表：si_sim_info")])]),a._v(" "),_("h3",{attrs:{id:"接口开放方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接口开放方式"}},[a._v("#")]),a._v(" 接口开放方式")]),a._v(" "),_("ul",[_("li",[a._v("RPC方式访问（前提：需要集成Dubbo 性能要求较高的系统）")]),a._v(" "),_("li",[a._v("SpringCloud的FeignClient方式访问（需要集成SpringCloud）")])]),a._v(" "),_("h2",{attrs:{id:"方案-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方案-2"}},[a._v("#")]),a._v(" 方案")]),a._v(" "),_("p",[a._v("分三个阶段完成")]),a._v(" "),_("p",[a._v("第一阶段：从库使用阶段（目的：先减轻主库压力，从物理上实现读写分离）")]),a._v(" "),_("p",[a._v("第二阶段：缓存启用阶段（目的：提升性能）")]),a._v(" "),_("p",[a._v("第三阶段：完善接口阶段，确定各接口是否启用本地缓存（目的：扩展，再次提升性能）")]),a._v(" "),_("h3",{attrs:{id:"第一阶段：从库使用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第一阶段：从库使用"}},[a._v("#")]),a._v(" 第一阶段：从库使用")]),a._v(" "),_("h4",{attrs:{id:"目标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[a._v("#")]),a._v(" 目标")]),a._v(" "),_("p",[a._v("基于MySQL构建物理上的读写分离，减轻主库压力")]),a._v(" "),_("ul",[_("li",[a._v("业务层通过负载均衡访问MySQL从库，极大程度的降低MySQL主库压力;")]),a._v(" "),_("li",[a._v("MySQL集群化（一主多从）部署；")]),a._v(" "),_("li",[a._v("统一的对外数据访问接口；")]),a._v(" "),_("li",[a._v("提供用户信息、车辆信息、设备信息、卡信息读取、用户及车辆上下文信息读取接口；")]),a._v(" "),_("li",[a._v("集成Dubbo及SpringCloud提供API访问；")])]),a._v(" "),_("h4",{attrs:{id:"技术思路"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#技术思路"}},[a._v("#")]),a._v(" 技术思路")]),a._v(" "),_("p",[_("a",{attrs:{"data-fancybox":"",title:"1569468195657",href:"/assets/1569468195657.png"}},[_("img",{attrs:{src:"/assets/1569468195657.png",alt:"1569468195657"}})])]),a._v(" "),_("ul",[_("li",[a._v("搭建MySQL数据库从库集群，基础数据池系统通过连接负载均衡并路由到MySQL数据库从库集群中的一个salve节点，直接从salve节点读取数据。")]),a._v(" "),_("li",[a._v("提供用户信息、车辆信息、设备信息、卡信息读取、用户及车辆上下文信息读取接口，通过RPC和HTTP方式暴露给其他应用系统；")]),a._v(" "),_("li",[a._v("保持之前各系统对MySQL主库的写操作，物理上实现用户信息、车辆信息、设备信息、卡信息的读写分离；")])]),a._v(" "),_("h3",{attrs:{id:"第二阶段：缓存启用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第二阶段：缓存启用"}},[a._v("#")]),a._v(" 第二阶段：缓存启用")]),a._v(" "),_("h4",{attrs:{id:"目标-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#目标-2"}},[a._v("#")]),a._v(" 目标")]),a._v(" "),_("p",[a._v("基于MySQL及Redis设计构建统一的缓存服务")]),a._v(" "),_("ul",[_("li",[a._v("业务层访问MySQL及Redis方式统一；")]),a._v(" "),_("li",[a._v("MySQL集群化（MySQL跨机分库分表集群）/Redis集群化部署；")]),a._v(" "),_("li",[a._v("将业务双写MySQL及Redis的方式改为MySQL到Redis底层binlog数据同步方式完成同步；")]),a._v(" "),_("li",[a._v("异构数据存储支持最终一致性数据读写服务；")]),a._v(" "),_("li",[a._v("支持存储层面扩容缩容、故障转移业务无感知；")]),a._v(" "),_("li",[a._v("集群设计满足QPS/TPS需求（大类业务适度拆分到不同集群中）；")]),a._v(" "),_("li",[a._v("统一的对外数据访问接口；")])]),a._v(" "),_("h4",{attrs:{id:"技术思路-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#技术思路-2"}},[a._v("#")]),a._v(" 技术思路")]),a._v(" "),_("p",[_("a",{attrs:{"data-fancybox":"",title:"1569481260401",href:"/assets/1569481260401.png"}},[_("img",{attrs:{src:"/assets/1569481260401.png",alt:"1569481260401"}})])]),a._v(" "),_("p",[a._v("使用阿里开源的Canal进行MySQL Binlog数据的抽取，开发一个数据转换工具将从Binlog中解析出的数据转换成自带schema的json数据并写入Kafka中。开发kafka数据订阅同步服务，将消费kafka中信息并同步给Redis。")]),a._v(" "),_("h4",{attrs:{id:"特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[a._v("#")]),a._v(" 特点")]),a._v(" "),_("p",[a._v("异步缓存更新：基于订阅Binlog的同步机制实现异步更新缓存")]),a._v(" "),_("ul",[_("li",[a._v("读Redis：热数据基本都在Redis；")]),a._v(" "),_("li",[a._v("写MySQL:增删改都是操作MySQL；")]),a._v(" "),_("li",[a._v("更新Redis数据：MySQ的数据操作binlog，来更新到Redis；")])]),a._v(" "),_("h3",{attrs:{id:"第三阶段：完善api，local-cache确定"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第三阶段：完善api，local-cache确定"}},[a._v("#")]),a._v(" 第三阶段：完善API，Local Cache确定")]),a._v(" "),_("p",[a._v("API采用持续更新和完善的方式，旨在解决对人-车-设备-卡数据访问量较高的API，为了进一步提升性能，某些不变量接口可启用本地缓存的方式处理。")])])}),[],!1,null,null,null);t.default=v.exports}}]);